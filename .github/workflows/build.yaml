name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest  # Chạy trên môi trường Ubuntu của GitHub Actions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Lấy mã nguồn từ repository

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Cấu hình Docker Buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  }}  # Docker Hub username từ GitHub Secrets
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN  }}  # Docker Hub password từ GitHub Secrets

      - name: Cache Docker Image Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-helloworld
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Deploy Docker Image to Local Server
        uses: appleboy/ssh-action@v0.1.5  # Sử dụng SSH Action của Appleboy
        with:
          host: ${{ secrets.SERVER_HOST }}  # Địa chỉ IP của máy chủ local
          username: ${{ secrets.SERVER_USERNAME }}  # Username trên máy chủ local
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH private key từ GitHub Secrets
          port: 22  # Cổng SSH (mặc định là 22)
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/flask-helloworld:latest  # Kéo image từ Docker Hub
            docker stop flask-helloworld || true  # Dừng container cũ nếu có
            docker rm flask-helloworld || true  # Xóa container cũ nếu có
            docker run -d --name flask-helloworld -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/flask-helloworld:latest  # Khởi động container mới

  # build-frontend:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '14'

  #   - name: Install dependencies
  #     run: |
  #       cd frontend
  #       npm install

  #   - name: Build frontend
  #     run: |
  #       cd frontend
  #       npm run dev

  # test-frontend:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '14'

  #   - name: Install dependencies
  #     run: |
  #       cd frontend
  #       npm install

  #   - name: Run tests
  #     run: |
  #       cd frontend
  #       npx jest --config jest.config.cjs

  # deploy-backend:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Deploy backend
  #     run: |
  #       bash scripts/deploy-backend.sh

  # deploy-frontend:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Deploy frontend
  #     run: |
  #       bash scripts/deploy-frontend.sh
